services:

#  user-central:
#    build:
#      context: ./user-central
#      dockerfile: Dockerfile
#    image: user-central:latest
#    ports:
#      - "5865:5865"
#    depends_on:
#      - postgres
#    environment:
#      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/postgres
#      SPRING_DATASOURCE_USERNAME: postgres
#      SPRING_DATASOURCE_PASSWORD: admin

  postgres:
    image: postgres:latest
    platform: linux/amd64
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: admin
    ports:
      - "6543:5432"

  

  keycloak-mysql:
    container_name: keycloak-mysql
    image: mysql:5.7
    platform: linux/amd64
    volumes:
      - ./mysql_keycloak_data:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: keycloak
      MYSQL_USER: keycloak
      MYSQL_PASSWORD: password

  keycloak:
    container_name: keycloak
    image: quay.io/keycloak/keycloak:23.0.3
#    command: [ "start-dev", "--import-realm" ]
    command: [ "start-dev"]
    depends_on:
      - keycloak-mysql
    environment:
      DB_VENDOR: MYSQL
      DB_ADDR: keycloak-mysql
      DB_DATABASE: keycloak
      DB_USER: keycloak
      DB_PASSWORD: password
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    ports:
      - "8080:8080"

  mysql:
    image: mysql:8
    container_name: mysql
    restart: always
    networks:
      - app-network
    environment:
      MYSQL_ROOT_PASSWORD: root
    ports:
      - "3306:3306"
    volumes:
      - mysql-data:/var/lib/mysql  

  redis:
    image: redis:latest
    container_name: redis-cache
    restart: always
    command: ["redis-server", "--appendonly", "yes"]
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - keycloak-network

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    restart: always
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - keycloak-network

      
  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    restart: always
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS:
        PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP:
        PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CREATE_TOPICS: "keycloak-events:1:1"
      KAFKA_LOG_RETENTION_HOURS: 168 
    networks:
      - keycloak-network
#    volumes:
#      - ./keycloak-realms/:/opt/keycloak/data/import/
